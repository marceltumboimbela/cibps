/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CIBPS.java
 *
 * Created on 03 Des 09, 17:55:47
 */

package cibps;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Mr Zorro
 */
public class CIBPS extends javax.swing.JFrame implements Runnable {

    private String username;
    private String divisi;
    private boolean logged;
    
    private Login login;
    
    /** Creates new form CIBPS */
    public CIBPS() {
        initComponents();
        init();
        logged = false;
    }

    private void init() {
        setSize(648, 533);
        login = new Login();
        login.setSize(login.sizeWidth, login.sizeHeigth);
        login.setVisible(true);
        panelDesktop.removeAll();
        panelDesktop.add(login);
    }
    
    private void loadPanel(String namaPanel) {
        if (namaPanel.compareTo("Login") == 0) {
            Login jp;
            jp = new Login();
            jp.setSize(jp.sizeWidth, jp.sizeHeigth);
            jp.setVisible(true);
            panelDesktop.removeAll();
            panelDesktop.add(jp);
        }
        else if (namaPanel.compareTo("TablePenghuni") == 0) {
            TablePenghuni jp;
            jp = new TablePenghuni();
            jp.setSize(jp.sizeWidth, jp.sizeHeight);
            jp.setVisible(true);
            panelDesktop.removeAll();
            panelDesktop.add(jp);
        }
        else if (namaPanel.compareTo("TableKamar") == 0) {
            TableKamar jp;
            jp = new TableKamar(divisi);
            jp.setSize(jp.sizeWidth, jp.sizeHeight);
            jp.setVisible(true);
            panelDesktop.removeAll();
            panelDesktop.add(jp);
        }
        else if (namaPanel.compareTo("TableBarang") == 0) {
            TableBarang jp;
            jp = new TableBarang();
            jp.setSize(jp.sizeWidth, jp.sizeHeight);
            jp.setVisible(true);
            panelDesktop.removeAll();
            panelDesktop.add(jp);
        }
        else if (namaPanel.compareTo("TableTransaksi") == 0) {
            TableTransaksi jp;
            jp = new TableTransaksi();
            jp.setSize(jp.sizeWidth, jp.sizeHeight);
            jp.setVisible(true);
            panelDesktop.removeAll();
            panelDesktop.add(jp);
        }
        else if (namaPanel.compareTo("TableKas") == 0) {
            TableKas jp;
            jp = new TableKas();
            jp.setSize(jp.sizeWidth, jp.sizeHeight);
            jp.setVisible(true);
            panelDesktop.removeAll();
            panelDesktop.add(jp);
        }
        else if (namaPanel.compareTo("Registrasi") == 0) {
            newPenghuni jp;
            jp = new newPenghuni();
            jp.setVisible(true);
        }
        else if (namaPanel.compareTo("newBarang") == 0) {
            newBarang jp;
            jp = new newBarang();
            jp.setVisible(true);
        }
        else if (namaPanel.compareTo("newTransaksi") == 0) {
            newTransaksi jp;
            jp = new newTransaksi();
            jp.setVisible(true);
        }
        else if (namaPanel.compareTo("statistik") == 0) {
            viewStatistik jp;
            jp = new viewStatistik();
            jp.setVisible(true);
        }
    }

    public void close() {
        this.setVisible(false);
        this.dispose();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDesktop = new javax.swing.JDesktopPane();
        panelBar = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuItemKeluar = new javax.swing.JMenuItem();
        mnuDatabase = new javax.swing.JMenu();
        mnuUser = new javax.swing.JMenu();
        mnuPenghuni = new javax.swing.JMenu();
        mnuItemViewDBPenghuni = new javax.swing.JMenuItem();
        mnuItemRegistrasi = new javax.swing.JMenuItem();
        mnuKamar = new javax.swing.JMenu();
        mnuItemViewDBKamar = new javax.swing.JMenuItem();
        mnuMinishop = new javax.swing.JMenu();
        mnuItemViewDBBarang = new javax.swing.JMenuItem();
        mnuItemTambahBarang = new javax.swing.JMenuItem();
        mnuTransaksi = new javax.swing.JMenu();
        mnuItemViewDBTransaksi = new javax.swing.JMenuItem();
        mnuItemTambahTransaksi = new javax.swing.JMenuItem();
        mnuItemViewStatistik = new javax.swing.JMenuItem();
        mnuKas = new javax.swing.JMenu();
        mnuItemViewDBKas = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        mnuTentang = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CIBPS");
        setMinimumSize(new java.awt.Dimension(640, 480));
        setName("mainFrame"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(null);

        panelDesktop.setMaximumSize(new java.awt.Dimension(640, 480));
        panelDesktop.setMinimumSize(new java.awt.Dimension(640, 480));
        getContentPane().add(panelDesktop);
        panelDesktop.setBounds(0, 0, 640, 480);
        getContentPane().add(panelBar);
        panelBar.setBounds(0, 480, 640, 30);

        mnuFile.setText("File");

        mnuItemKeluar.setText("Keluar");
        mnuItemKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemKeluarActionPerformed(evt);
            }
        });
        mnuFile.add(mnuItemKeluar);

        jMenuBar1.add(mnuFile);

        mnuDatabase.setText("Database");
        mnuDatabase.setEnabled(false);

        mnuUser.setText("User");
        mnuUser.setEnabled(false);
        mnuDatabase.add(mnuUser);

        mnuPenghuni.setText("Penghuni");

        mnuItemViewDBPenghuni.setText("Lihat database");
        mnuItemViewDBPenghuni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemViewDBPenghuniActionPerformed(evt);
            }
        });
        mnuPenghuni.add(mnuItemViewDBPenghuni);

        mnuItemRegistrasi.setText("Registrasi");
        mnuItemRegistrasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemRegistrasiActionPerformed(evt);
            }
        });
        mnuPenghuni.add(mnuItemRegistrasi);

        mnuDatabase.add(mnuPenghuni);

        mnuKamar.setText("Kamar");

        mnuItemViewDBKamar.setText("Lihat database");
        mnuItemViewDBKamar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemViewDBKamarActionPerformed(evt);
            }
        });
        mnuKamar.add(mnuItemViewDBKamar);

        mnuDatabase.add(mnuKamar);

        mnuMinishop.setText("Minishop");

        mnuItemViewDBBarang.setText("Lihat database");
        mnuItemViewDBBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemViewDBBarangActionPerformed(evt);
            }
        });
        mnuMinishop.add(mnuItemViewDBBarang);

        mnuItemTambahBarang.setText("Tambah barang");
        mnuItemTambahBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemTambahBarangActionPerformed(evt);
            }
        });
        mnuMinishop.add(mnuItemTambahBarang);

        mnuDatabase.add(mnuMinishop);

        mnuTransaksi.setText("Transaksi");

        mnuItemViewDBTransaksi.setText("Lihat database");
        mnuItemViewDBTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemViewDBTransaksiActionPerformed(evt);
            }
        });
        mnuTransaksi.add(mnuItemViewDBTransaksi);

        mnuItemTambahTransaksi.setText("Tambah transaksi");
        mnuItemTambahTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemTambahTransaksiActionPerformed(evt);
            }
        });
        mnuTransaksi.add(mnuItemTambahTransaksi);

        mnuItemViewStatistik.setText("Lihat statistik");
        mnuItemViewStatistik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemViewStatistikActionPerformed(evt);
            }
        });
        mnuTransaksi.add(mnuItemViewStatistik);

        mnuDatabase.add(mnuTransaksi);

        mnuKas.setText("Kas");

        mnuItemViewDBKas.setText("Lihat database");
        mnuItemViewDBKas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemViewDBKasActionPerformed(evt);
            }
        });
        mnuKas.add(mnuItemViewDBKas);

        mnuDatabase.add(mnuKas);

        jMenuBar1.add(mnuDatabase);

        jMenu2.setText("Bantuan");

        jMenuItem3.setText("Petunjuk");
        jMenu2.add(jMenuItem3);

        mnuTentang.setText("Tentang");
        mnuTentang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuTentangActionPerformed(evt);
            }
        });
        jMenu2.add(mnuTentang);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuItemViewDBPenghuniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemViewDBPenghuniActionPerformed
        //if (panel != null)
            //this.remove(panel);
        loadPanel("TablePenghuni");
    }//GEN-LAST:event_mnuItemViewDBPenghuniActionPerformed

    private void mnuItemViewDBKamarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemViewDBKamarActionPerformed
        //if (panel != null)
            //this.remove(panel);
        loadPanel("TableKamar");
    }//GEN-LAST:event_mnuItemViewDBKamarActionPerformed

    private void mnuItemViewDBBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemViewDBBarangActionPerformed
        loadPanel("TableBarang");
    }//GEN-LAST:event_mnuItemViewDBBarangActionPerformed

    private void mnuItemViewDBTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemViewDBTransaksiActionPerformed
        loadPanel("TableTransaksi");
    }//GEN-LAST:event_mnuItemViewDBTransaksiActionPerformed

    private void mnuItemRegistrasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemRegistrasiActionPerformed
        loadPanel("Registrasi");
    }//GEN-LAST:event_mnuItemRegistrasiActionPerformed

    private void mnuItemViewDBKasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemViewDBKasActionPerformed
        loadPanel("TableKas");
    }//GEN-LAST:event_mnuItemViewDBKasActionPerformed

    private void mnuItemTambahBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemTambahBarangActionPerformed
        loadPanel("newBarang");
    }//GEN-LAST:event_mnuItemTambahBarangActionPerformed

    private void mnuItemTambahTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemTambahTransaksiActionPerformed
        loadPanel("newTransaksi");
    }//GEN-LAST:event_mnuItemTambahTransaksiActionPerformed

    private void mnuItemViewStatistikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemViewStatistikActionPerformed
        loadPanel("statistik");
    }//GEN-LAST:event_mnuItemViewStatistikActionPerformed

    private void mnuItemKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemKeluarActionPerformed
        this.dispose();
        this.setVisible(false);
    }//GEN-LAST:event_mnuItemKeluarActionPerformed

    private void mnuTentangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuTentangActionPerformed
        About ab = new About(this, true);
        ab.setVisible(true);
    }//GEN-LAST:event_mnuTentangActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CIBPS.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(CIBPS.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(CIBPS.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(CIBPS.class.getName()).log(Level.SEVERE, null, ex);
                }
                CIBPS app = new CIBPS();
                Thread t = new Thread(app);
                t.start();
                app.setVisible(true);
                //new CIBPS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenu mnuDatabase;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuItemKeluar;
    private javax.swing.JMenuItem mnuItemRegistrasi;
    private javax.swing.JMenuItem mnuItemTambahBarang;
    private javax.swing.JMenuItem mnuItemTambahTransaksi;
    private javax.swing.JMenuItem mnuItemViewDBBarang;
    private javax.swing.JMenuItem mnuItemViewDBKamar;
    private javax.swing.JMenuItem mnuItemViewDBKas;
    private javax.swing.JMenuItem mnuItemViewDBPenghuni;
    private javax.swing.JMenuItem mnuItemViewDBTransaksi;
    private javax.swing.JMenuItem mnuItemViewStatistik;
    private javax.swing.JMenu mnuKamar;
    private javax.swing.JMenu mnuKas;
    private javax.swing.JMenu mnuMinishop;
    private javax.swing.JMenu mnuPenghuni;
    private javax.swing.JMenuItem mnuTentang;
    private javax.swing.JMenu mnuTransaksi;
    private javax.swing.JMenu mnuUser;
    private javax.swing.JPanel panelBar;
    private javax.swing.JDesktopPane panelDesktop;
    // End of variables declaration//GEN-END:variables

    public void run() {
        try {
            while (login.running == true) {
                if (login.success == true) {
                    this.username = login.username;
                    this.divisi = login.divisi;
                    this.logged = true;
                    login.running = false;
                    mnuDatabase.setEnabled(true);
                    break;
                }
                this.setTitle("CIBPS [Login]");
            }
            this.setTitle(String.format("CIBPS [Logged as %s-%s]", username, divisi));
            loadPanel("TablePenghuni");
        } catch (Exception ex) {

        }
    }
}
