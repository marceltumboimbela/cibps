/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TableKamar.java
 *
 * Created on 03 Des 09, 9:11:09
 */

package cibps;

import java.sql.Connection;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Mr Zorro
 */
public class TableKamar extends javax.swing.JPanel {

    public final int sizeWidth = 640;
    public final int sizeHeight = 480;

    private Connection koneksi;
    private Vector<Kamar> dbKamar;
    private Vector<Penghuni> dbPenghuni;
    private String divisi;
    
    /** Creates new form TableKamar */
    public TableKamar(String divisi) {
        initComponents();
        this.divisi = divisi;
        initFirst();
    }

    private void initFirst() {
        dbKamar = new Vector();
        koneksi = Database.openConnection(koneksi);
        if (koneksi != null) {
            dbKamar = Database.loadDBKamar(koneksi);
            dbPenghuni = Database.loadDBPenghuni(koneksi);
            showDatabase();
        }
        if (divisi.compareTo("OWNER") == 0 || divisi.compareTo("MANAJER") == 0) {
            btnHapus.setEnabled(true);
            btnTambah.setEnabled(true);
        }
        else {
            btnHapus.setEnabled(false);
            btnTambah.setEnabled(false);
        }
    }

    private void showDatabase() {
        if (dbKamar.isEmpty())
            return;
        try {
            DefaultTableModel dtm = (DefaultTableModel) masterTable.getModel();
            for (int i = 0; i < dbKamar.size(); i++) {
                int idx = -1;
                Kamar record = dbKamar.get(i);
                dtm.addRow(new Object[dtm.getColumnCount()]);
                TableColumnModel tcm = masterTable.getColumnModel();
                for (int j = 0; j < masterTable.getColumnCount(); j++) {
                    if (masterTable.getColumnName(j).compareTo("No Kamar") == 0)
                        if ((idx = tcm.getColumnIndex("No Kamar")) > -1)
                            dtm.setValueAt(record.getNoKamar(), i, idx);
                    if (masterTable.getColumnName(j).compareTo("Status") == 0)
                        if ((idx = tcm.getColumnIndex("Status")) > -1)
                            dtm.setValueAt(record.getStatus(), i, idx);
                    if (masterTable.getColumnName(j).compareTo("ID Penghuni") == 0)
                        if ((idx = tcm.getColumnIndex("ID Penghuni")) > -1)
                            dtm.setValueAt(record.getIdPenghuni(), i, idx);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(TableKamar.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
    }

    private void showSelectedElement() {
        int selIdx = masterTable.getSelectedRow();
        try {
            if (selIdx > -1) {
                Kamar record = dbKamar.get(selIdx);
                txtNoKamar.setText(String.valueOf(record.getNoKamar()));
                txtStatus.setText(record.getStatus());
                txtIDPenghuni.setText((String) record.getIdPenghuni());
            }
            else {
                txtNoKamar.setText("");
                txtStatus.setText("");
                txtIDPenghuni.setText("");
            }
        } catch (Exception ex) {
            Logger.getLogger(TableKamar.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
    }

    public void refresh() {
        DefaultTableModel dtm = (DefaultTableModel) masterTable.getModel();
        int sum = dtm.getRowCount();
        for (int i = 0; i < sum; i++) {
            dtm.removeRow(0);
        }
        initFirst();
    }

    private void hapus() {
        int index = masterTable.getSelectedRow();
        if (index == -1)
            return;
        Database.removeKamar(koneksi, (dbKamar.get(index)).getNoKamar());
        dbKamar.remove(index);
        refresh();
    }

    private void tambah() {
        Database.insertKamarBaru(koneksi);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lblNoKamar = new javax.swing.JLabel();
        txtNoKamar = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        lblIDPenghuni = new javax.swing.JLabel();
        txtIDPenghuni = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnHapus = new javax.swing.JButton();
        btnTambah = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        masterTable.setAutoCreateRowSorter(true);
        masterTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No Kamar", "Status", "ID Penghuni"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Short.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        masterTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                masterTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(masterTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblNoKamar.setText("No Kamar");

        txtNoKamar.setEditable(false);

        lblStatus.setText("Status");

        txtStatus.setEditable(false);

        lblIDPenghuni.setText("ID Penghuni");

        txtIDPenghuni.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIDPenghuni)
                    .addComponent(lblStatus)
                    .addComponent(lblNoKamar))
                .addGap(80, 80, 80)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNoKamar, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                    .addComponent(txtStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                    .addComponent(txtIDPenghuni, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNoKamar)
                    .addComponent(txtNoKamar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIDPenghuni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIDPenghuni))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHapus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 389, Short.MAX_VALUE)
                .addComponent(btnRefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTambah)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambah)
                    .addComponent(btnRefresh)
                    .addComponent(btnHapus))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void masterTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseClicked
        showSelectedElement();
}//GEN-LAST:event_masterTableMouseClicked

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        hapus();
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        if (dbKamar.isEmpty() == false)
            dbKamar.clear();
        refresh();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        tambah();
        refresh();
    }//GEN-LAST:event_btnTambahActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnTambah;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblIDPenghuni;
    private javax.swing.JLabel lblNoKamar;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTable masterTable;
    private javax.swing.JTextField txtIDPenghuni;
    private javax.swing.JTextField txtNoKamar;
    private javax.swing.JTextField txtStatus;
    // End of variables declaration//GEN-END:variables

}
